name: Deploy Backend

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Write GCP SA Key to file
        run: echo "${{ secrets.GCP_SA_KEY }}" > gcp-key.json

      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/gcp-key.json" >> $GITHUB_ENV

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker Auth
        run: gcloud auth configure-docker europe-central2-docker.pkg.dev

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start Cloud SQL Proxy
        run: |
          curl -sSLo cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.9.1/cloud-sql-proxy.linux.amd64
          chmod +x cloud-sql-proxy
          ./cloud-sql-proxy --credentials-file=gcp-key.json \
            --port=5432 ${{ secrets.DB_INSTANCE_CONNECTION_NAME }} &
          sleep 5

      - name: Build & Push Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --tag europe-central2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_BACKEND_REPO }}/backend:latest \
            --push \
            ./backend

      - name: Run Alembic migrations
        env:
          DATABASE_URL: postgresql+psycopg2://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@127.0.0.1:5432/${{ secrets.DB_NAME }}
          IMAGE: europe-central2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_BACKEND_REPO }}/backend:latest
        run: |
          echo "Running Alembic on $IMAGE"
          docker run --rm \
            -e DATABASE_URL="$DATABASE_URL" \
            -w /app \
            "$IMAGE" \
            alembic upgrade head

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.GCP_BACKEND_SERVICE }} \
            --image europe-central2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_BACKEND_REPO }}/backend:latest \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --port 8080